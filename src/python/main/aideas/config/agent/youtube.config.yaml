stages:
  login:
    url: https://accounts.google.com/ServiceLogin?service=youtube&passive=true&continue=https%3A%2F%2Fwww.youtube.com%2Fsignin%3Faction_handle_signin%3Dtrue%26app%3Ddesktop%26hl%3Den-GB%26next%3Dhttps%253A%252F%252Fwww.youtube.com%252F&hl=en-GB
    stage-items:
      fill-email:
        when:
          search-x-paths: $self.stages.login.stage-items.fill-email.search-x-paths
          actions: is_displayed
        search-x-paths: //*[@id="identifierId"]
        actions: enter_text $youtube.user.email
      select-account:
        when:
          search-x-paths: $self.stages.login.stage-items.select-account.search-x-paths
          actions: is_displayed
        events:
          onerror: continue
        search-x-paths:
          - //*[@id="view_container"]//ul/li[contains(text(), "${youtube.user.email}")]
          - //*[@id="view_container"]//ul/li//div[contains(text(), "${youtube.user.email}")]
          - //*[@id="view_container"]/div/div/div[2]/div/div[1]/div/form/span/section/div/div/div/div/ul/li[contains(text(), "${youtube.user.email}")]
          - //*[@id="view_container"]/div/div/div[2]/div/div[1]/div/form/span/section/div/div/div/div/ul/li//div[contains(text(), "${youtube.user.email}")]
          - //*[@id="view_container"]/div/div/div[2]/div/div[1]/div/form/span/section/div/div/div/div/ul/li[1]/div/div[1]/div/div[2]/div[2]
      submit-email:
        search-x-paths:
          - //*[@id="identifierNext"]/div/button
          - //*[@id="identifierNext"]//button[contains(text(), "Next")]
        actions:
          - click
          - wait 2
      fill-password:
        search-x-paths:
          - //*[@id="password"]/div[1]/div/div[1]/input
          - //*[@id="password"]//input[@type="password"]
        actions: enter_text $youtube.user.pass
      submit-password:
        search-x-paths:
          - //*[@id="passwordNext"]/div/button
          - //*[@id="passwordNext"]//button[contains(text(), "Next")]
        actions:
          - click
          - wait 2
  dismiss-alerts:
    events:
      onstart: dismiss_alert 7 # Wait at most 7 seconds for the alert to appear
      onerror: continue
    stage-items:
      dismiss-account-update-option:
        search-x-paths:
          - //*[@id="yDmH0d"]/c-wiz[2]/div/div/div/div[2]/div[4]/div[1]/button
          - //*[@id="yDmH0d"]//button[contains(text(), "Not now")]
  add-video-details:
    url: https://www.youtube.com/upload
    stage-items:
      add-video:
        wait-timeout-seconds: 0  # Signal not to use webdriver wait and its conditions
        search-x-paths:
          - //input[@type="file"]
          - //*[@id="content"]/input[@type="file"]
        actions:
          # Use the first result from the specified pictory download stage
          - get_first_file ${agents.dir}/pictory/results/save-downloaded-video/save-file $video.output.type
          - enter_text $results.me[0]
          - wait 5
      enter-video-title:
        search-x-paths:
          - //*[@id="title-wrapper"]//*[@id="textbox"]
          #- //*[@id="title-wrapper"]//*[@id="input"]
        actions:
          - clear_text  # YouTube guesses a title for us, we don't want that
          - enter_text $video.title "#shorts"
      enter-video-description:
        search-x-paths:
          - //*[@id="description-wrapper"]//*[@id="textbox"]
          - //*[@id="description-wrapper"]//*[@id="description-textarea"]
          #- //*[@id="description-wrapper"]//*[@id="input"]
        actions: enter_text $video.description
  add-video-playlist:
    events:
      onerror: continue
    stage-items:
      expand-play-list-options:
        search-x-paths:
          - //*[@id="basics"]//ytcp-video-metadata-playlists
          - //*[@id="basics"]//ytcp-video-metadata-playlists/ytcp-text-dropdown-trigger
          - //*[@id="basics"]//ytcp-video-metadata-playlists/ytcp-text-dropdown-trigger/ytcp-dropdown-trigger
          - //*[@id="basics"]//ytcp-video-metadata-playlists/ytcp-text-dropdown-trigger/ytcp-dropdown-trigger/div
          - //*[@id="basics"]//ytcp-video-metadata-playlists/ytcp-text-dropdown-trigger/ytcp-dropdown-trigger//span[contains(text(), "Select")]
      select-play-list:
        search-x-paths:
          - //*[@id="items"]//span[contains(text(), "${youtube.playlist.name}")]
          - //*[@id="items"]/ytcp-ve[1]/li
#          - //*[@id="items"]/ytcp-ve[1]/li//span[contains(text(), "${youtube.playlist.name}")]
        actions: click
      confirm-playlist:
        expected: not is_displayed
        events:
          onerror: retry 1
        search-x-paths:
          - //*[@id="dialog"]/div[2]/ytcp-button[2]/div
          - //*[@id="dialog"]//div[contains(text(), "Done")]
  audience:
    stage-items:
      # Without this an error will be displayed when we try to move to the next stage
      specify-age-restrictions:
        search-x-paths:
          - //*[@id="audience"]//*[contains(text(), "not made for kids")]
          - //*[@id="audience"]/ytkc-made-for-kids-select//*[@id="radioLabel"]/*[contains(text(), "not made for kids")]
          - //*[@id="audience"]/ytkc-made-for-kids-select//tp-yt-paper-radio-group/tp-yt-paper-radio-button//*[contains(text(), "not made for kids")]
          - //*[@id="audience"]/ytkc-made-for-kids-select//tp-yt-paper-radio-group//*[@id="radioLabel"]
          - //*[@id="audience"]/ytkc-made-for-kids-select//tp-yt-paper-radio-group//*[@id="radioLabel"]/*[contains(text(), "not made for kids")]
          - //*[@id="audience"]/ytkc-made-for-kids-select//tp-yt-paper-radio-group/tp-yt-paper-radio-button[2]
  proceed:
    stage-items:
      click-next-button:
        search-x-paths:
          - //*[@id="next-button"]
          - //*[@id="next-button"]/div
          - //*[@id="next-button"]//*[contains(text(), "Next")]
        actions:
          - wait 2
          - click
  related-video:
    events:
      onerror: run_stages proceed
      onsuccess: run_stages proceed
    stage-items:
      expand-options:
        search-x-paths:
          - //*[@id="shorts-content-links-add-button"]
          - //*[@id="shorts-content-links-add-button"]/div[contains(text(), "Add")]
      select-related-video:
        search-x-paths:
          # We select the first video in the list. If we want to select a specific video:
          # //*[@id="dialog"]/div[2]/div/ytcp-video-pick-dialog-contents/div/div/div/ytcp-entity-card//span[starts-with(text(), "${youtube.video.related.title}")]
          - //*[@id="dialog"]//ytcp-video-pick-dialog-contents//ytcp-entity-card[1]
          - //*[@id="dialog"]//ytcp-video-pick-dialog-contents//ytcp-entity-card[1]/*[@id="content"]
          - //*[@id="dialog"]//ytcp-entity-card[1]
          - //*[@id="dialog"]//ytcp-entity-card[1]/*[@id="content"]
  # Only one subtitle can be added
  # We don't implement for now because we need to confirm if the added subtitles work as expected
  #subtitles:
  checks:
    stage-items:
      move-to-next:
        events:
          onstart: run_stages proceed
  visibility:
    stage-items:
      select-visibility:
        search-x-paths:
          - //*[@id="radioLabel"]/tp-yt-paper-radio-button[contains(text(), "Public")]
          - //*[@id="privacy-radios"]/tp-yt-paper-radio-button[contains(text(), "Public")]
          - //*[@id="radioLabel"]/*[contains(text(), "Public")]
          - //*[@id="privacy-radios"]/tp-yt-paper-radio-button/*[contains(text(), "Public")]
        actions:
          - click
          - wait 2 # The button text changes based on the selected visibility
  publish-video:
    stage-items:
      click-publish-button:
        search-x-paths:
          - //*[@id="done-button"]
          - //*[@id="done-button"]/div
  wait-for-video-link:
    events:
      onerror: continue
    stage-items:
      save-video-link:
        wait-timeout-seconds: 60
        search-x-paths: //*[@id="share-url"]
        actions:
          - get_text
          - save_to_file $results.me[0]