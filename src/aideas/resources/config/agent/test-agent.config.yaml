# [llm|browser|blog|generic]  llm is not yet supported
agent-type: generic
# Optional [generate-video|generate-text|post|test|custom|unlisted]
agent-tags: test
variables:
  - Zero
  - One
  - Two
  - Three
stages:
  stage-0:
    stage-items:
      item-0:
        actions: log INFO ||| stage-0.item-0
  stage-1:
    url: https://www.google.com/
    events:
      onstart: log INFO ||| START
      onerror: log INFO ||| ERROR
      onsuccess: log INFO ||| SUCCESS
    stage-items:
      item-1:
        actions: log INFO ||| stage-1.item-1
      item-2:
        actions: log INFO ||| stage-1.item-2
  stage-2_run-other-stage-with-different-config:
    stage-items:
      item-1:
        events:
          onstart: run_stages stage-0
        actions:
          - eval importlib.import_module('urllib.parse').urlparse('https://test.com/abc/def?k=v').path
          - eval importlib.import_module('os').path.basename('${results.me[0]}')
          - log INFO ||| ${results.me[1]}
  stage-3_test-iteration:
    iteration:
      index_variable: idx
      start: 1
      step: 2
      end: 5
    stage-items:
      item-1:
        actions:
          - eval ${context.test-agent.variables}
          - eval ${results.me[0]}[${context.idx}]
          - log INFO ||| Number at ${context.idx} is ${results.me[1]}
          - set_context_values number=${results.me[1]}
          - log INFO ||| Number from context ${context.number}
  # Logs INFO ||| Number at ['Zero', 'One', 'Two', 'Three'][3]
  #          - log INFO ||| Number at ${context.test-agent.variables}[${context.idx}]
  # Variable parsing will fail. We don't support nested variables at the moment,
  #          - log INFO ||| Number at ${context.test-agent.variables[${context.idx}]}
  stage-4-context-values:
    stage-items:
      set-values:
        actions:
          - set_context_values name=Test-Agent type=generic
      get-values:
        actions:
          - log INFO ||| Name=${context.name} Type=${context.type}
  stage-5:
    stage-items:
      starts-with:
        actions:
          - starts_with Johnson John
  stage-6-runs-stage-5:
    stage-items:
      delegate:
        actions:
          - run_stages stage-5
          # access the result from stage-5
          - log INFO ||| ${results.test-agent.stage-5.starts-with[0]}
          # access the result from stage-6's run of stage-5
          - log INFO ||| ${results.test-agent.stage-6-runs-stage-5.starts-with[0]}


